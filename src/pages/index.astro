---
// import { Image } from "@astrojs/image/components";
import BaseLayout from "../layouts/BaseLayout.astro";
import { getFakeItems } from "../utils.js";

// https://etherscan.io/nft/0x12423f35fa1e2969c73586788090f24ba72a6a1e/{id}
// export async function getStaticPaths({}) {
// 	const items = getFakeItems();

// 	return items.map((item) => {
// 		return {
// 			params: item,
// 			props: { item },
// 		};
// 	});
// }

// const { items } = Astro.props;

const items = getFakeItems();
---

<BaseLayout>
  <!-- Container for demo purpose -->
  <div class="container my-12 px-6 mx-auto">
    <!-- Section: Design Block -->
    <section class="mb-32 text-gray-800">
      <h2 class="text-6xl font-extrabold mb-12 text-center">
        <em
          class="text-transparent bg-clip-text bg-gradient-to-r from-cyan-500 to-green-500"
          >Ether Logs</em
        >
      </h2>

      <div
        class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 xl:grid-cols-6 gap-4"
      >
        {
          items &&
            items.map((item) => (
              <div class="zoom-pulse shadow-xl rounded-lg relative overflow-hidden bg-no-repeat bg-cover">
                <img
                  src={item.image}
                  alt={item.title}
                  class="w-full transition duration-300 ease-linear align-middle"
                />
                <a
                  href={`https://etherscan.io/nft/0x12423f35fa1e2969c73586788090f24ba72a6a1e/${item.id}`}
                >
                  <div
                    class="absolute top-0 right-0 bottom-0 left-0 w-full h-full overflow-hidden bg-fixed"
                    style="background-color: rgba(0, 0, 0, 0.15)"
                  >
                    <div class="flex flex-col justify-between h-full">
                      <h5 class="flex text-slate-100 font-extrabold text-4xl m-4 sm:mt-2 sm:ml-3 sm:text-2xl  md:text-xl lg:text-base">
                        {item.title}
                      </h5>
                      <div class="m-3 lg:m-2">
                        <div class="flex items-center justify-between">
                          <div class="py-1 px-2 rounded-md bg-slate-100 bg-opacity-80 text-gray-800 font-semibold text-xl sm:text-base md:text-sm lg:text-xs xl:text-sm">
                            Îž<span class="pl-1">{item.price}</span>
                          </div>
                          <div class="py-1 px-2 rounded-md bg-slate-100 bg-opacity-80 text-gray-800 font-semibold text-xl sm:text-base md:text-sm lg:text-xs xl:text-sm">
                            <div class="">
                              <svg
                                xmlns="http://www.w3.org/2000/svg"
                                viewBox="0 0 20 20"
                                fill="currentColor"
                                class="w-4 h-4 inline-block m-0 p-0 sm:-mt-1 -mr-1.5"
                              >
                                <path d="M15.5 2A1.5 1.5 0 0014 3.5v13a1.5 1.5 0 001.5 1.5h1a1.5 1.5 0 001.5-1.5v-13A1.5 1.5 0 0016.5 2h-1zM9.5 6A1.5 1.5 0 008 7.5v9A1.5 1.5 0 009.5 18h1a1.5 1.5 0 001.5-1.5v-9A1.5 1.5 0 0010.5 6h-1zM3.5 10A1.5 1.5 0 002 11.5v5A1.5 1.5 0 003.5 18h1A1.5 1.5 0 006 16.5v-5A1.5 1.5 0 004.5 10h-1z" />
                              </svg>

                              <span>{item.rank}</span>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div class="hover-overlay">
                    <div
                      class="mask absolute top-0 right-0 bottom-0 left-0 w-full h-full overflow-hidden bg-fixed opacity-0 transition duration-300 ease-in-out hover:opacity-100"
                      style="background-color: rgba(253, 253, 253, 0.15)"
                    />
                  </div>
                </a>
              </div>
            ))
        }
      </div>
    </section>
    <!-- Section: Design Block -->
  </div>
  <!-- Container for demo purpose -->
</BaseLayout>

<style>
  @keyframes zoomPulse {
    50% {
      /* transform: scale(1); */
      opacity: 0.5;
    }
  }
  @keyframes heart-pulse {
    0% {
      transform: scale(1); /* scaling to 0 */
    }
    50% {
      transform: scale(1.1); /* increasing the size */
    }
    100% {
      transform: scale(1); /* seeting back to initial size */
    }
  }
  .zoom-pulse:hover img {
    /* transform: scale(1.1); */
    animation: heart-pulse 0.8s infinite ease-in-out;
  }
</style>
